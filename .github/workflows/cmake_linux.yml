name: CMake (Linux)

on:

  push:
    paths:
      - src/**
      - cmake/**
      - "**/CMakeLists.txt"
      - "CMakePresets.json"
      - "!.github/workflows/**"
      - .github/workflows/cmake_linux.yml
      - vcpkg.json
      - "!**/Makefile*"

  pull_request:
    paths:
      - src/**
      - cmake/**
      - "**/CMakeLists.txt"
      - "CMakePresets.json"
      - "!.github/workflows/**"
      - .github/workflows/cmake_linux.yml
      - vcpkg.json
      - "!**/Makefile*"

jobs:

  linux:

    name: "${{ matrix.ui.name }}, ${{ matrix.build.name }}, ${{ matrix.dynarec.name }}, ${{ matrix.environment.arch }}"

    runs-on: ${{ matrix.environment.runner }}

    strategy:
      fail-fast: true
      matrix:
        build:
#          - name: Regular
#            preset: regular
          - name: Debug
            preset: dev_debug
            slug: -Debug
          - name: Dev
            preset: development
            slug: -Dev
        dynarec:
          - name: ODR
            new: off
            slug: -ODR
          - name: NDR
            new: on
            slug: -NDR
        ui:
          - name: SDL GUI
            qt: off
            qt6: off
            static: on
          - name: Qt 5 GUI
            qt: on
            qt6: off
            slug: -Qt5
            packages: >-
              qtbase5-dev
              qtbase5-private-dev
              qttools5-dev
              qttranslations5-l10n
              libevdev-dev
              libxkbcommon-x11-dev
          - name: Qt 6 GUI
            qt: on
            qt6: on
            slug: -Qt6
            packages: >-
              qt6-base-dev
              qt6-base-private-dev
              qt6-tools-dev
              qt6-tools-dev-tools
              qt6-l10n-tools
              qt6-translations-l10n
              libevdev-dev
              libxkbcommon-x11-dev
              libvulkan-dev
        environment:
          - arch: x86_64
            toolchain: ./cmake/flags-gcc-x86_64.cmake
            slug: "-x86_64"
            runner: ubuntu-22.04
          - arch: arm64
            toolchain: ./cmake/flags-gcc-aarch64.cmake
            slug: -arm64
            runner: ubuntu-22.04-arm
        exclude:
          - dynarec:
              new: off
            environment:
              arch: arm64

    steps:
      - name: Install dependencies
        run: >-
          sudo apt update && sudo apt install
          build-essential
          ninja-build
          libfreetype-dev
          libsdl2-dev
          libpng-dev
          libc6-dev
          librtmidi-dev
          libopenal-dev
          libslirp-dev
          libfluidsynth-dev
          libvdeplug-dev
          libserialport-dev
          ${{ matrix.ui.packages }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Configure CMake
        run: >-
          cmake -G Ninja -S . -B build --preset ${{ matrix.build.preset }}
          --toolchain  ${{ matrix.environment.toolchain }}
          -D NEW_DYNAREC=${{ matrix.dynarec.new }}
          -D CMAKE_INSTALL_PREFIX=./build/artifacts
          -D QT=${{ matrix.ui.qt }}
          -D USE_QT6=${{ matrix.ui.qt6 }}

      - name: Build
        run: |
          cmake --build build

      - name: Generate package
        run: |
          cmake --install build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: '86Box${{ matrix.ui.slug }}${{ matrix.dynarec.slug }}${{ matrix.build.slug }}-UbuntuJammy${{ matrix.environment.slug }}-gha${{ github.run_number }}'
          path: build/artifacts/**
